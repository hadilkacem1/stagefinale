version: "2.2"
services:
  discovery:
    build: ../../discovery-server
    ports:
      - "8761:8761"
    image: discovery-server
    networks:
      - my-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - eureka.client.register-with-eureka=false
      - eureka.client.fetch-registry=false
      - eureka.instance.hostname=eureka-service
      - eureka.server.wait-time-in-ms-when-sync-empty=0
      - eureka.client.service-url.defaultZone=http://discovery:8761/eureka/
      - eureka.instance.preferIpAddress=true

  mysql:
    image: mysql:8.0.23
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=systeme
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - my-network

  analyse-ms:
    build: ../../Analyse-MS
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka/
      - spring.datasource.url=jdbc:mysql://mysql:3306/systeme?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
      - spring.datasource.username=root
      - spring.datasource.password=root
      - spring.application.name=analyse-service
      - server.port=8807
      - eureka.instance.hostname=analyse-service
      - eureka.instance.non-secure-port=8807
    ports:
      - "8807:8807"
    depends_on:
      - mysql
      - discovery
    image: analyse-service
    networks:
      - my-network 
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8807/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  pip-ms:
    build: ../../Pip-MS
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka/
      - spring.datasource.url=jdbc:mysql://mysql:3306/systeme?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
      - spring.datasource.username=root
      - spring.datasource.password=root
      - spring.application.name=pip-service
      - server.port=8809
      - eureka.instance.hostname=pip-service
      - eureka.instance.non-secure-port=8809
    ports:
      - "8809:8809"
    depends_on:
      - mysql
      - discovery
    image: pip-service
    networks:
      - my-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8809/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  projet-ms:
    build: ../../Projet_MS
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka/
      - spring.datasource.url=jdbc:mysql://mysql:3306/systeme?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
      - spring.datasource.username=root
      - spring.datasource.password=root
      - spring.application.name=projet-service
      - server.port=8804
      - eureka.instance.hostname=projet-service
      - eureka.instance.non-secure-port=8804
    ports:
      - "8804:8804"
    depends_on:
      - mysql
      - discovery
    image: projet-service
    networks:
      - my-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8804/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  auth-ms:
    build: ../../Auth-MS
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka/
      - spring.datasource.url=jdbc:mysql://mysql:3306/systeme?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
      - spring.datasource.username=root
      - spring.datasource.password=root
      - spring.application.name=auth-service
      - server.port=8805
      - eureka.instance.hostname=auth-service
      - eureka.instance.non-secure-port=8805
    ports:
      - "8805:8805"
    depends_on:
      - mysql
      - discovery
    image: auth-service
    networks:
      - my-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8805/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  volet-ms:
    build: ../../Volet-MS
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka/
      - spring.datasource.url=jdbc:mysql://mysql:3306/systeme?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
      - spring.datasource.username=root
      - spring.datasource.password=root
      - spring.application.name=volet-service
      - server.port=8800
      - eureka.instance.hostname=volet-service
      - eureka.instance.non-secure-port=8800
    ports:
      - "8800:8800"
    depends_on:
      - mysql
      - discovery
    image: volet-service
    networks:
      - my-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8800/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  config:
    build: ../../config-server
    command: "--spring.profiles.active=native --spring.cloud.config.server.native.searchLocations=/config"
    volumes:
      - ./src/main/resources/centralRepo:/config
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka/
      - spring.profiles.active=native
      - spring.application.name=config-server
      - server.port=8066
      - eureka.instance.hostname=config-server
      - eureka.instance.non-secure-port=8066
    ports:
      - "8066:8066"
    depends_on:
      - discovery
    image: config-server
    networks:
      - my-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8066/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  gateway:
    build: ../../api-gateway
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka/
      - spring.datasource.url=jdbc:mysql://mysql:3306/systeme?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
      - spring.datasource.username=root
      - spring.datasource.password=root
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
      - spring.application.name=api-gateway
      - server.port=8763
      - eureka.instance.hostname=api-gateway
      - eureka.instance.non-secure-port=8763
    ports:
      - "8763:8763"
    depends_on:
      - discovery
      - auth-ms
      - pip-ms
    image: gateway-service
    networks:
      - my-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8763/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  my-network:
    driver: bridge

volumes:
  mysql_data:
